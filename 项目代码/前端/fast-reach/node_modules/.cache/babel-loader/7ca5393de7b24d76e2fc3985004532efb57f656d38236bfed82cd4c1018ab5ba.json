{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"BusinessOrderDetail\",\n  data() {\n    return {\n      order: null,\n      orderId: null,\n      // Initialize as null\n      statusList: [{\n        value: \"0\",\n        label: \"未接单\"\n      }, {\n        value: \"1\",\n        label: \"已结单\"\n      }, {\n        value: \"2\",\n        label: \"派送中\"\n      }, {\n        value: \"3\",\n        label: \"已完成\"\n      }]\n    };\n  },\n  mounted() {\n    this.orderId = this.$route.query.id; // Get the ID from the URL\n    this.fetchOrderDetails();\n  },\n  watch: {\n    \"$route.query.id\": function (newId) {\n      this.orderId = newId;\n      this.fetchOrderDetails(); // Fetch new order details when ID changes\n    }\n  },\n  methods: {\n    fetchOrderDetails() {\n      if (this.orderId) {\n        axios.get(\"/api/business/order/page/detail\", {\n          headers: {\n            token: localStorage.getItem(\"token\")\n          },\n          params: {\n            orderId: this.orderId\n          }\n        }).then(response => {\n          this.order = response.data.data;\n          getOrderDishes(this.order);\n        }).catch(error => {\n          console.error(\"Error fetching order details:\", error);\n        });\n      }\n    },\n    getOrderDishes() {},\n    getStatusLabel(status) {\n      const statusObj = this.statusList.find(item => item.value === status.toString());\n      return statusObj ? statusObj.label : \"未知状态\";\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","order","orderId","statusList","value","label","mounted","$route","query","id","fetchOrderDetails","watch","$route.query.id","newId","methods","get","headers","token","localStorage","getItem","params","then","response","getOrderDishes","catch","error","console","getStatusLabel","status","statusObj","find","item","toString"],"sources":["src/components/business/BusinessOrderDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"common-layout\">\r\n    <el-container>\r\n      <el-aside width=\"300px\" style=\"background-color: #f5f5f5; padding: 20px\">\r\n        <el-card shadow=\"hover\">\r\n          <template #header>\r\n            <div class=\"clearfix\">\r\n              <span>订单详情</span>\r\n              <!-- <el-button style=\"float: right; padding: 3px 0\" type=\"text\">编辑</el-button> -->\r\n            </div>\r\n          </template>\r\n          <div v-if=\"order\">\r\n            <el-descriptions border :column=\"1\">\r\n              <el-descriptions-item label=\"总价格\">{{\r\n                order.totalPrice\r\n              }}</el-descriptions-item>\r\n              <el-descriptions-item label=\"订单状态\">{{\r\n                getStatusLabel(order.status)\r\n              }}</el-descriptions-item>\r\n              <el-descriptions-item label=\"订单地址\">{{\r\n                order.address\r\n              }}</el-descriptions-item>\r\n              <!-- <el-descriptions-item label=\"订单创建时间\">{{\r\n                order.orderDate\r\n              }}</el-descriptions-item> -->\r\n            </el-descriptions>\r\n          </div>\r\n          <div v-else>\r\n            <el-skeleton :loading=\"true\" rows=\"4\"></el-skeleton>\r\n          </div>\r\n        </el-card>\r\n      </el-aside>\r\n      <el-main style=\"padding: 20px\">\r\n        <el-card shadow=\"hover\">\r\n          <template #header>菜单详情</template>\r\n          <img\r\n            src=\"https://shadow.elemecdn.com/app/element/hamburger.9cf7b091-55e9-11e9-a976-7f4d0b07eef6.png\"\r\n            style=\"width: 100%; margin-bottom: 20px\"\r\n          />\r\n          <el-divider>Order Dishes</el-divider>\r\n          <div v-if=\"order && order.orderedDishes\">\r\n            <p v-for=\"dish in order.orderedDishes.split(',')\" :key=\"dish\">{{ dish }}</p>\r\n          </div>\r\n          <div v-else>\r\n            <el-skeleton :loading=\"true\" rows=\"4\"></el-skeleton>\r\n          </div>\r\n        </el-card>\r\n      </el-main>\r\n    </el-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"BusinessOrderDetail\",\r\n  data() {\r\n    return {\r\n      order: null,\r\n      orderId: null, // Initialize as null\r\n      statusList: [\r\n        { value: \"0\", label: \"未接单\" },\r\n        { value: \"1\", label: \"已结单\" },\r\n        { value: \"2\", label: \"派送中\" },\r\n        { value: \"3\", label: \"已完成\" },\r\n      ],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.orderId = this.$route.query.id; // Get the ID from the URL\r\n    this.fetchOrderDetails();\r\n  },\r\n  watch: {\r\n    \"$route.query.id\": function (newId) {\r\n      this.orderId = newId;\r\n      this.fetchOrderDetails(); // Fetch new order details when ID changes\r\n    },\r\n  },\r\n  methods: {\r\n    fetchOrderDetails() {\r\n      if (this.orderId) {\r\n        axios\r\n          .get(\"/api/business/order/page/detail\", {\r\n            headers: {\r\n              token: localStorage.getItem(\"token\"),\r\n            },\r\n            params: {\r\n              orderId: this.orderId,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            this.order = response.data.data;\r\n            getOrderDishes(this.order);\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error fetching order details:\", error);\r\n          });\r\n      }\r\n    },\r\n    getOrderDishes(){\r\n\r\n    },\r\n    getStatusLabel(status) {\r\n      const statusObj = this.statusList.find((item) => item.value === status.toString());\r\n      return statusObj ? statusObj.label : \"未知状态\";\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.common-layout {\r\n  font-family: \"Arial\", sans-serif;\r\n}\r\n</style>\r\n"],"mappings":"AAqDA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,OAAA;MAAA;MACAC,UAAA,GACA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA;IAEA;EACA;EACAC,QAAA;IACA,KAAAJ,OAAA,QAAAK,MAAA,CAAAC,KAAA,CAAAC,EAAA;IACA,KAAAC,iBAAA;EACA;EACAC,KAAA;IACA,4BAAAC,CAAAC,KAAA;MACA,KAAAX,OAAA,GAAAW,KAAA;MACA,KAAAH,iBAAA;IACA;EACA;EACAI,OAAA;IACAJ,kBAAA;MACA,SAAAR,OAAA;QACAJ,KAAA,CACAiB,GAAA;UACAC,OAAA;YACAC,KAAA,EAAAC,YAAA,CAAAC,OAAA;UACA;UACAC,MAAA;YACAlB,OAAA,OAAAA;UACA;QACA,GACAmB,IAAA,CAAAC,QAAA;UACA,KAAArB,KAAA,GAAAqB,QAAA,CAAAtB,IAAA,CAAAA,IAAA;UACAuB,cAAA,MAAAtB,KAAA;QACA,GACAuB,KAAA,CAAAC,KAAA;UACAC,OAAA,CAAAD,KAAA,kCAAAA,KAAA;QACA;MACA;IACA;IACAF,eAAA,GAEA;IACAI,eAAAC,MAAA;MACA,MAAAC,SAAA,QAAA1B,UAAA,CAAA2B,IAAA,CAAAC,IAAA,IAAAA,IAAA,CAAA3B,KAAA,KAAAwB,MAAA,CAAAI,QAAA;MACA,OAAAH,SAAA,GAAAA,SAAA,CAAAxB,KAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}