{"ast":null,"code":"import axios from 'axios';\nimport { ElMessage } from 'element-ui';\nimport * as echarts from 'echarts';\nexport default {\n  data() {\n    return {\n      dateList: [],\n      // 日期列表\n      turnoverList: [],\n      // 营业额，与日期列表一一对应\n      orderNumList: [],\n      // 每天订单数\n      nameList: [],\n      // 所有菜品名称\n      numberList: [],\n      // 所有菜的销量\n\n      turnoverData: [],\n      orderData: [],\n      dishNumData: []\n    };\n  },\n  methods: {\n    initTurnoverChart() {\n      const chart = echarts.init(this.$refs.turnoverChart);\n      const option = {\n        xAxis: {\n          type: 'category',\n          data: this.turnoverData.map(item => item.date)\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          data: this.turnoverData.map(item => item.turnover),\n          type: 'bar'\n        }]\n      };\n      chart.setOption(option);\n    },\n    initOrderChart() {\n      const chart = echarts.init(this.$refs.orderChart);\n      const option = {\n        xAxis: {\n          type: 'category',\n          data: this.orderData.map(item => item.date)\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          data: this.orderData.map(item => item.orders),\n          type: 'bar'\n        }]\n      };\n      chart.setOption(option);\n    },\n    initDishNumChart() {\n      const chart = echarts.init(this.$refs.dishNumChart);\n      const option = {\n        xAxis: {\n          type: 'category',\n          data: this.dishNumData.map(item => item.name)\n        },\n        yAxis: {\n          type: 'value'\n        },\n        series: [{\n          data: this.dishNumData.map(item => item.sales),\n          type: 'bar'\n        }]\n      };\n      chart.setOption(option);\n    }\n  },\n  watch: {\n    turnoverData() {\n      this.initTurnoverChart();\n    },\n    orderData() {\n      this.initOrderChart();\n    },\n    dishNumData() {\n      this.initDishNumChart();\n    }\n  },\n  mounted() {\n    axios({\n      // 分天营业额统计\n      url: '/api/business/report/turnover',\n      method: 'get',\n      headers: {\n        \"token\": localStorage.getItem('token')\n      }\n    }).then(res => {\n      this.dateList = res.data.data.dateList;\n      this.turnoverList = res.data.data.turnoverList;\n      this.turnoverData = this.dateList.map((date, index) => ({\n        date: date,\n        turnover: this.turnoverList[index]\n      }));\n    }).catch(err => {\n      console.log(err.data.msg);\n      ElMessage.error('数据加载失败');\n    });\n    axios({\n      // 每天订单数\n      url: '/api/business/report/user',\n      method: 'get',\n      headers: {\n        \"token\": localStorage.getItem('token')\n      }\n    }).then(res => {\n      console.log(\"Received data:\", res.data.data); // 打印整个数据对象以查看结构\n      this.orderNumList = res.data.data.orderNumList;\n      this.dateList = res.data.data.dateList;\n      this.orderData = res.data.data.dateList.map((date, index) => ({\n        date: date,\n        orders: res.data.data.orderNumList[index]\n      }));\n      console.log(\"Processed order data:\", this.orderData); // 打印处理后的数据，查看是否正确组装\n    }).catch(err => {\n      console.log(err.data.msg);\n      ElMessage.error('数据加载失败');\n    });\n    axios({\n      // 所有菜的销量\n      url: '/api/business/report/top',\n      method: 'get',\n      headers: {\n        \"token\": localStorage.getItem('token')\n      }\n    }).then(res => {\n      this.nameList = res.data.data.nameList;\n      this.numberList = res.data.data.numberList;\n      this.dishNumData = res.data.data.nameList.map((name, index) => ({\n        name: name,\n        sales: res.data.data.numberList[index]\n      }));\n    }).catch(err => {\n      console.log(err.data.msg);\n      ElMessage.error('数据加载失败');\n    });\n    this.$nextTick(() => {\n      this.initTurnoverChart();\n      this.initOrderChart();\n      this.initDishNumChart();\n    });\n  }\n};","map":{"version":3,"names":["axios","ElMessage","echarts","data","dateList","turnoverList","orderNumList","nameList","numberList","turnoverData","orderData","dishNumData","methods","initTurnoverChart","chart","init","$refs","turnoverChart","option","xAxis","type","map","item","date","yAxis","series","turnover","setOption","initOrderChart","orderChart","orders","initDishNumChart","dishNumChart","name","sales","watch","mounted","url","method","headers","localStorage","getItem","then","res","index","catch","err","console","log","msg","error","$nextTick"],"sources":["src/components/business/BusinessDataStatistics.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <h1>展示报表数据</h1>\r\n    \r\n    <div style=\"display: flex;\">\r\n      <el-table :data=\"turnoverData\" style=\"width: 50%\" stripe>\r\n        <el-table-column prop=\"date\" label=\"日期\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"turnover\" label=\"营业额\" width=\"180\"></el-table-column>\r\n      </el-table>\r\n      <div ref=\"turnoverChart\" style=\"width: 50%; height: 400px;\"></div>\r\n    </div>\r\n\r\n    <div style=\"display: flex;\">\r\n      <el-table :data=\"orderData\" style=\"width: 50%\" stripe>\r\n        <el-table-column prop=\"date\" label=\"日期\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"orders\" label=\"订单数\" width=\"180\"></el-table-column>\r\n      </el-table>\r\n      <div ref=\"orderChart\" style=\"width: 50%; height: 400px;\"></div>\r\n    </div>\r\n\r\n    <div style=\"display: flex;\">\r\n      <el-table :data=\"dishNumData\" style=\"width: 50%\" stripe>\r\n        <el-table-column prop=\"name\" label=\"菜品名称\" width=\"180\"></el-table-column>\r\n        <el-table-column prop=\"sales\" label=\"销售量\" width=\"180\"></el-table-column>\r\n      </el-table>\r\n      <div ref=\"dishNumChart\" style=\"width: 50%; height: 400px;\"></div>\r\n    </div>\r\n\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from 'axios';\r\nimport { ElMessage } from 'element-ui';\r\nimport * as echarts from 'echarts';\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      dateList: [], // 日期列表\r\n      turnoverList: [], // 营业额，与日期列表一一对应\r\n      orderNumList: [], // 每天订单数\r\n      nameList: [], // 所有菜品名称\r\n      numberList: [], // 所有菜的销量\r\n\r\n      turnoverData: [],\r\n      orderData: [],\r\n      dishNumData: [],\r\n    };\r\n  },\r\n  methods: {\r\n    initTurnoverChart() {\r\n      const chart = echarts.init(this.$refs.turnoverChart);\r\n      const option = {\r\n        xAxis: { type: 'category', data: this.turnoverData.map(item => item.date) },\r\n        yAxis: { type: 'value' },\r\n        series: [{ data: this.turnoverData.map(item => item.turnover), type: 'bar' }]\r\n      };\r\n      chart.setOption(option);\r\n    },\r\n    initOrderChart() {\r\n      const chart = echarts.init(this.$refs.orderChart);\r\n      const option = {\r\n        xAxis: { type: 'category', data: this.orderData.map(item => item.date) },\r\n        yAxis: { type: 'value' },\r\n        series: [{ data: this.orderData.map(item => item.orders), type: 'bar' }]\r\n      };\r\n      chart.setOption(option);\r\n    },\r\n    initDishNumChart() {\r\n      const chart = echarts.init(this.$refs.dishNumChart);\r\n      const option = {\r\n        xAxis: { type: 'category', data: this.dishNumData.map(item => item.name) },\r\n        yAxis: { type: 'value' },\r\n        series: [{ data: this.dishNumData.map(item => item.sales), type: 'bar' }]\r\n      };\r\n      chart.setOption(option);\r\n    }\r\n  },\r\n  watch: {\r\n    turnoverData() {\r\n      this.initTurnoverChart();\r\n    },\r\n    orderData() {\r\n      this.initOrderChart();\r\n    },\r\n    dishNumData() {\r\n      this.initDishNumChart();\r\n    }\r\n  },\r\n  mounted() {\r\n    axios({ // 分天营业额统计\r\n      url: '/api/business/report/turnover',\r\n      method: 'get',\r\n      headers: {\r\n        \"token\": localStorage.getItem('token'),\r\n      }\r\n    }).then(res => {\r\n      this.dateList = res.data.data.dateList;\r\n      this.turnoverList = res.data.data.turnoverList;\r\n      this.turnoverData = this.dateList.map((date, index) => ({\r\n        date: date,\r\n        turnover: this.turnoverList[index]\r\n      }));\r\n    }).catch(err => {\r\n      console.log(err.data.msg);\r\n      ElMessage.error('数据加载失败');\r\n    });\r\n\r\n    axios({ // 每天订单数\r\n      url: '/api/business/report/user',\r\n      method: 'get',\r\n      headers: {\r\n        \"token\": localStorage.getItem('token')\r\n      }\r\n    }).then(res => {\r\n      console.log(\"Received data:\", res.data.data); // 打印整个数据对象以查看结构\r\n      this.orderNumList = res.data.data.orderNumList;\r\n      this.dateList = res.data.data.dateList;\r\n      this.orderData = res.data.data.dateList.map((date, index) => ({\r\n        date: date,\r\n        orders: res.data.data.orderNumList[index]\r\n      }));\r\n      console.log(\"Processed order data:\", this.orderData); // 打印处理后的数据，查看是否正确组装\r\n    }).catch(err => {\r\n      console.log(err.data.msg);\r\n      ElMessage.error('数据加载失败');\r\n    });\r\n\r\n    axios({ // 所有菜的销量\r\n      url: '/api/business/report/top',\r\n      method: 'get',\r\n      headers: {\r\n        \"token\": localStorage.getItem('token')\r\n      }\r\n    }).then(res => {\r\n      this.nameList = res.data.data.nameList;\r\n      this.numberList = res.data.data.numberList;\r\n      this.dishNumData = res.data.data.nameList.map((name, index) => ({\r\n        name: name,\r\n        sales: res.data.data.numberList[index]\r\n      }));\r\n    }).catch(err => {\r\n      console.log(err.data.msg);\r\n      ElMessage.error('数据加载失败');\r\n    });\r\n\r\n    this.$nextTick(() => {\r\n      this.initTurnoverChart();\r\n      this.initOrderChart();\r\n      this.initDishNumChart();\r\n    });\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n\r\n</style>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}