{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      records: [],\n      // 订单数据列表\n      total: 0,\n      // 总记录数\n      currentPage: 1,\n      // 当前页码\n      pageSize: 10,\n      // 每页显示的记录数\n      editflag: false,\n      form: {\n        id: \"\",\n        userId: \"\",\n        totalPrice: \"\",\n        status: \"\",\n        address: \"\"\n      },\n      // 搜索条件\n      searchMap: {\n        id: \"\",\n        date: \"\",\n        status: \"\"\n      },\n      // 订单状态\n      statusList: [{\n        value: \"0\",\n        label: \"未接单\"\n      }, {\n        value: \"1\",\n        label: \"已结单\"\n      }, {\n        value: \"2\",\n        label: \"派送中\"\n      }, {\n        value: \"3\",\n        label: \"已完成\"\n      }],\n      dialogFormVisible: false,\n      formLabelWidth: \"120px\"\n    };\n  },\n  methods: {\n    // 编辑订单\n    editOrder(row) {\n      this.editflag = true;\n      console.log(this.editflag);\n      this.form = {\n        id: row.id,\n        userId: row.userId,\n        totalPrice: row.totalPrice,\n        status: this.statusList[row.status].label,\n        address: row.address\n      };\n    },\n    // 提交表单\n    submitForm() {\n      axios({\n        url: \"/api/business/order/update\",\n        headers: {\n          token: localStorage.getItem(\"token\")\n        },\n        method: \"put\",\n        data: {\n          orderId: this.form.id,\n          status: this.form.status\n        }\n        // params: {\n        //   orderId: this.form.id,\n        //   status: this.form.status,\n        //   totalPrice: this.form.totalPrice,\n        //   address: this.form.address,\n        //\n      }).then(res => {\n        console.log(res.data.data);\n        this.loadData(); // 刷新订单数据\n        this.editflag = false; // 关闭编辑状态\n      }).catch(err => {\n        console.log(err.data.msg);\n      });\n    },\n    // 删除订单\n    deleteOrder(id) {\n      axios({\n        url: \"/api/business/order/delete\",\n        headers: {\n          token: localStorage.getItem(\"token\")\n        },\n        method: \"delete\",\n        params: {\n          orderId: id\n        }\n        // data: {\n        //   orderId: id,\n        // },\n      }).then(res => {\n        console.log(id);\n        console.log(res.data.data);\n        this.loadData(); // 刷新订单数据\n      }).catch(err => {\n        console.log(id);\n        console.log(err.data.msg);\n      });\n    },\n    // 查看订单详情\n    viewOrder(id) {\n      // 在这里添加响应按钮和配置路由，跳转到订单详情页\n      this.$router.push({\n        path: \"/business/manage/orderdetail\",\n        query: {\n          id: id\n        }\n      });\n    },\n    searchID(id) {\n      axios.get(\"/api/business/order/page/detail\", {\n        headers: {\n          token: localStorage.getItem(\"token\")\n        },\n        params: {\n          orderId: id\n        }\n      }).then(res => {\n        console.log(res);\n        console.log(res.data.data);\n        this.total = 1;\n        this.records[0] = res.data.data;\n        console.log(this.records);\n      }).catch(error => {\n        console.error(\"Error fetching order details:\", error);\n      });\n    },\n    // 分页改变时触发\n    changePage(page) {\n      this.currentPage = page;\n      this.loadData(); // 重新加载数据\n    },\n    // 加载数据\n    loadData() {\n      axios({\n        url: \"/api/business/order/page\",\n        headers: {\n          token: localStorage.getItem(\"token\")\n        },\n        method: \"get\",\n        params: {\n          status: \"1\",\n          // 根据需求填写\n          page: this.currentPage,\n          // 当前页码\n          pageSize: this.pageSize,\n          // 每页数量\n          id: null,\n          // 根据需求填写\n          phone: null // 根据需求填写\n        }\n      }).then(res => {\n        console.log(res.data.data);\n        this.total = res.data.data.total;\n        this.records = [res.data.data]; // 用搜索结果替换现有的records\n      }).catch(err => {\n        console.log(err.data.msg);\n      });\n    }\n  },\n  created() {\n    this.loadData(); // 初始化加载数据\n  }\n};","map":{"version":3,"names":["axios","data","records","total","currentPage","pageSize","editflag","form","id","userId","totalPrice","status","address","searchMap","date","statusList","value","label","dialogFormVisible","formLabelWidth","methods","editOrder","row","console","log","submitForm","url","headers","token","localStorage","getItem","method","orderId","then","res","loadData","catch","err","msg","deleteOrder","params","viewOrder","$router","push","path","query","searchID","get","error","changePage","page","phone","created"],"sources":["src/components/business/BusinessOrderManage.vue"],"sourcesContent":["TODO\r\n点击订单管理，自动跳转到分页查询，这个界面要借鉴黑马苍穹外卖的UI设计，有分页查询（包括根据关键字号查询），修改订单状态，删除订单，订单分页查询详情\r\nTODO\r\n查看订单详情跳转到src\\views\\business\\orderfunction\\DetailOrderView.vue，这个你们自己添加响应按钮和配置路由，注意是一个订单一个“查看详情”按钮\r\nTODO 请求的时候data里面的数据得根据前端设计填充\r\n<template>\r\n  <div class=\"common-layout\">\r\n    <el-container>\r\n      <el-header>\r\n        <el-row :gutter=\"20\">\r\n          <el-col :span=\"6\">\r\n            <div class=\"grid-content ep-bg-purple\">\r\n              <el-input\r\n                v-model=\"searchMap.id\"\r\n                style=\"width: 240px\"\r\n                placeholder=\"输入订单ID\"\r\n              />\r\n            </div>\r\n          </el-col>\r\n          <el-col :span=\"6\">\r\n            <div class=\"grid-content ep-bg-purple\">\r\n              <el-date-picker\r\n                v-model=\"searchMap.date\"\r\n                type=\"date\"\r\n                placeholder=\"选择订单日期\"\r\n                :size=\"size\"\r\n              />\r\n            </div>\r\n          </el-col>\r\n          <el-col :span=\"6\">\r\n            <div class=\"grid-content ep-bg-purple\">\r\n              <el-select\r\n                v-model=\"searchMap.status\"\r\n                placeholder=\"订单状态\"\r\n                size=\"large\"\r\n                style=\"width: 240px\"\r\n              >\r\n                <el-option\r\n                  v-for=\"item in statusList\"\r\n                  :key=\"item.value\"\r\n                  :label=\"item.label\"\r\n                  :value=\"item.value\"\r\n                />\r\n              </el-select>\r\n            </div>\r\n          </el-col>\r\n          <el-col :span=\"6\">\r\n            <div class=\"grid-content ep-bg-purple\">\r\n              <el-button type=\"primary\" @click=\"searchID(searchMap.id)\">查询</el-button>\r\n            </div>\r\n          </el-col>\r\n        </el-row>\r\n      </el-header>\r\n      <el-main>\r\n        <div>\r\n          <el-table :data=\"records\" style=\"width: 100%\">\r\n            <el-table-column label=\"订单ID\" prop=\"id\" width=\"120\" />\r\n            <el-table-column label=\"顾客ID\" prop=\"userId\" width=\"120\" />\r\n            <el-table-column label=\"价格\" prop=\"totalPrice\" width=\"120\" />\r\n            <el-table-column label=\"状态\" prop=\"status\" width=\"120\">\r\n              <template slot-scope=\"scope\">\r\n                <span v-if=\"scope.row.status === 0\">未接单</span>\r\n                <span v-else-if=\"scope.row.status === 1\">已结单</span>\r\n                <span v-else-if=\"scope.row.status === 2\">派送中</span>\r\n                <span v-else-if=\"scope.row.status === 3\">已完成</span>\r\n              </template>\r\n            </el-table-column>\r\n            <el-table-column label=\"地址\" prop=\"address\" />\r\n            <el-table-column label=\"操作\" width=\"120\">\r\n              <template slot-scope=\"scope\">\r\n                <el-button type=\"text\" @click=\"editOrder(scope.row)\">编辑</el-button>\r\n                <el-button type=\"text\" @click=\"deleteOrder(scope.row.id)\">删除</el-button>\r\n                <el-button type=\"text\" @click=\"viewOrder(scope.row.id)\"\r\n                  >查看详情</el-button\r\n                >\r\n              </template>\r\n            </el-table-column>\r\n          </el-table>\r\n          <div style=\"margin-top: 20px\">\r\n            <el-pagination\r\n              :current-page=\"currentPage\"\r\n              :page-size=\"pageSize\"\r\n              @current-change=\"changePage\"\r\n              layout=\"total\"\r\n              :total=\"total\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <el-dialog title=\"修改订单\" :visible.sync=\"editflag\">\r\n          <el-form :model=\"form\">\r\n            <el-form-item label=\"订单ID\" :label-width=\"formLabelWidth\">\r\n              <el-input v-model=\"form.id\" autocomplete=\"off\" disabled />\r\n            </el-form-item>\r\n            <el-form-item label=\"顾客ID\" :label-width=\"formLabelWidth\">\r\n              <el-input v-model=\"form.userId\" autocomplete=\"off\" disabled />\r\n            </el-form-item>\r\n            <el-form-item label=\"状态\" :label-width=\"formLabelWidth\">\r\n              <el-select v-model=\"form.status\" placeholder=\"请选择状态\">\r\n                <el-option\r\n                  v-for=\"status in statusList\"\r\n                  :key=\"status.value\"\r\n                  :label=\"status.label\"\r\n                  :value=\"status.value\"\r\n                />\r\n              </el-select>\r\n            </el-form-item>\r\n            <el-form-item label=\"地址\" :label-width=\"formLabelWidth\">\r\n              <el-input v-model=\"form.address\" autocomplete=\"off\" disabled />\r\n            </el-form-item>\r\n          </el-form>\r\n          <div slot=\"footer\" class=\"dialog-footer\">\r\n            <el-button @click=\"editflag = false\">取消</el-button>\r\n            <el-button type=\"primary\" @click=\"submitForm\">确定</el-button>\r\n          </div>\r\n        </el-dialog>\r\n        <div class=\"example-pagination-block\">\r\n          <el-pagination\r\n            layout=\"prev, pager, next\"\r\n            :total=\"total\"\r\n            :current-page=\"currentPage\"\r\n            :page-size=\"pageSize\"\r\n            @current-change=\"changePage\"\r\n          />\r\n        </div>\r\n      </el-main>\r\n    </el-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      records: [], // 订单数据列表\r\n      total: 0, // 总记录数\r\n      currentPage: 1, // 当前页码\r\n      pageSize: 10, // 每页显示的记录数\r\n      editflag: false,\r\n      form: {\r\n        id: \"\",\r\n        userId: \"\",\r\n        totalPrice: \"\",\r\n        status: \"\",\r\n        address: \"\",\r\n      },\r\n      // 搜索条件\r\n      searchMap: {\r\n        id: \"\",\r\n        date: \"\",\r\n        status: \"\",\r\n      },\r\n      // 订单状态\r\n      statusList: [\r\n        { value: \"0\", label: \"未接单\" },\r\n        { value: \"1\", label: \"已结单\" },\r\n        { value: \"2\", label: \"派送中\" },\r\n        { value: \"3\", label: \"已完成\" },\r\n      ],\r\n      dialogFormVisible: false,\r\n      formLabelWidth: \"120px\",\r\n    };\r\n  },\r\n  methods: {\r\n    // 编辑订单\r\n    editOrder(row) {\r\n      this.editflag = true;\r\n      console.log(this.editflag);\r\n      this.form = {\r\n        id: row.id,\r\n        userId: row.userId,\r\n        totalPrice: row.totalPrice,\r\n        status: this.statusList[row.status].label,\r\n        address: row.address,\r\n      };\r\n    },\r\n    // 提交表单\r\n    submitForm() {\r\n      axios({\r\n        url: \"/api/business/order/update\",\r\n        headers: {\r\n          token: localStorage.getItem(\"token\"),\r\n        },\r\n        method: \"put\",\r\n        data: {\r\n          orderId: this.form.id,\r\n          status: this.form.status,\r\n        },\r\n        // params: {\r\n        //   orderId: this.form.id,\r\n        //   status: this.form.status,\r\n        //   totalPrice: this.form.totalPrice,\r\n        //   address: this.form.address,\r\n        //\r\n      })\r\n        .then((res) => {\r\n          console.log(res.data.data);\r\n          this.loadData(); // 刷新订单数据\r\n          this.editflag = false; // 关闭编辑状态\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.data.msg);\r\n        });\r\n    },\r\n    // 删除订单\r\n    deleteOrder(id) {\r\n      axios({\r\n        url: \"/api/business/order/delete\",\r\n        headers: {\r\n          token: localStorage.getItem(\"token\"),\r\n        },\r\n        method: \"delete\",\r\n        params: {\r\n          orderId: id,\r\n        },\r\n        // data: {\r\n        //   orderId: id,\r\n        // },\r\n      })\r\n        .then((res) => {\r\n          console.log(id);\r\n          console.log(res.data.data);\r\n          this.loadData(); // 刷新订单数据\r\n        })\r\n        .catch((err) => {\r\n          console.log(id);\r\n          console.log(err.data.msg);\r\n        });\r\n    },\r\n    // 查看订单详情\r\n    viewOrder(id) {\r\n      // 在这里添加响应按钮和配置路由，跳转到订单详情页\r\n      this.$router.push({\r\n        path: \"/business/manage/orderdetail\",\r\n        query: {\r\n          id: id,\r\n        },\r\n      });\r\n    },\r\n    searchID(id) {\r\n      axios\r\n        .get(\"/api/business/order/page/detail\", {\r\n          headers: {\r\n            token: localStorage.getItem(\"token\"),\r\n          },\r\n          params: {\r\n            orderId: id,\r\n          },\r\n        })\r\n        .then((res) => {\r\n          console.log(res);\r\n          console.log(res.data.data);\r\n          this.total = 1;\r\n          this.records[0] = res.data.data;\r\n          console.log(this.records)\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching order details:\", error);\r\n        });\r\n    },\r\n    // 分页改变时触发\r\n    changePage(page) {\r\n      this.currentPage = page;\r\n      this.loadData(); // 重新加载数据\r\n    },\r\n    // 加载数据\r\n    loadData() {\r\n      axios({\r\n        url: \"/api/business/order/page\",\r\n        headers: {\r\n          token: localStorage.getItem(\"token\"),\r\n        },\r\n        method: \"get\",\r\n        params: {\r\n          status: \"1\", // 根据需求填写\r\n          page: this.currentPage, // 当前页码\r\n          pageSize: this.pageSize, // 每页数量\r\n          id: null, // 根据需求填写\r\n          phone: null, // 根据需求填写\r\n        },\r\n      })\r\n        .then((res) => {\r\n          console.log(res.data.data);\r\n          this.total = res.data.data.total;\r\n          this.records = [res.data.data]; // 用搜索结果替换现有的records\r\n        })\r\n        .catch((err) => {\r\n          console.log(err.data.msg);\r\n        });\r\n    },\r\n  },\r\n  created() {\r\n    this.loadData(); // 初始化加载数据\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}