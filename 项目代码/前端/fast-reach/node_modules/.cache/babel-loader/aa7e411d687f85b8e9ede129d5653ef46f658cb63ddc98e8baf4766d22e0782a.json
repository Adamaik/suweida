{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"BusinessOrderDetail\",\n  data() {\n    return {\n      order: null,\n      dishes: [],\n      orderId: null,\n      // Initialize as null\n      statusList: [{\n        value: \"0\",\n        label: \"未接单\"\n      }, {\n        value: \"1\",\n        label: \"已结单\"\n      }, {\n        value: \"2\",\n        label: \"派送中\"\n      }, {\n        value: \"3\",\n        label: \"已完成\"\n      }]\n    };\n  },\n  mounted() {\n    this.orderId = this.$route.query.id; // Get the ID from the URL\n    this.fetchOrderDetails();\n  },\n  watch: {\n    \"$route.query.id\": function (newId) {\n      this.orderId = newId;\n      this.fetchOrderDetails(); // Fetch new order details when ID changes\n    }\n  },\n  methods: {\n    fetchOrderDetails() {\n      if (this.orderId) {\n        axios.get(\"/api/business/order/page/detail\", {\n          headers: {\n            token: localStorage.getItem(\"token\")\n          },\n          params: {\n            orderId: this.orderId\n          }\n        }).then(response => {\n          this.order = response.data.data;\n          console.log(\"Order details:\", this.order);\n          if (this.order && this.order.orderedDishes) {\n            this.fetchDishes(this.order.orderedDishes);\n          }\n        }).catch(error => {\n          console.error(\"Error fetching order details:\", error);\n        });\n      }\n    },\n    fetchDishes(orderedDishes) {\n      const dishIds = JSON.parse(orderedDishes);\n      const token = localStorage.getItem(\"token\");\n      const dishRequests = dishIds.map(id => axios.get(`/api/business/dish/order/dish`, {\n        headers: {\n          token: token\n        },\n        params: {\n          id: id\n        }\n      }));\n      Promise.all(dishRequests).then(responses => {\n        this.dishes = responses.map(response => response.data.data);\n        console.log(\"Dishes:\", this.dishes);\n      }).catch(error => {\n        console.error(\"Error fetching dishes:\", error);\n      });\n    },\n    getStatusLabel(status) {\n      const statusObj = this.statusList.find(item => item.value === status.toString());\n      return statusObj ? statusObj.label : \"未知状态\";\n    }\n  }\n};","map":{"version":3,"names":["axios","name","data","order","dishes","orderId","statusList","value","label","mounted","$route","query","id","fetchOrderDetails","watch","$route.query.id","newId","methods","get","headers","token","localStorage","getItem","params","then","response","console","log","orderedDishes","fetchDishes","catch","error","dishIds","JSON","parse","dishRequests","map","Promise","all","responses","getStatusLabel","status","statusObj","find","item","toString"],"sources":["src/components/business/BusinessOrderDetail.vue"],"sourcesContent":["<template>\r\n  <div class=\"common-layout\">\r\n    <el-container>\r\n      <el-aside width=\"300px\" style=\"background-color: #f5f5f5; padding: 20px\">\r\n        <el-card shadow=\"hover\">\r\n          <template #header>\r\n            <div class=\"clearfix\">\r\n              <span>订单详情</span>\r\n              <!-- <el-button style=\"float: right; padding: 3px 0\" type=\"text\">编辑</el-button> -->\r\n            </div>\r\n          </template>\r\n          <div v-if=\"order\">\r\n            <el-descriptions border :column=\"1\">\r\n              <el-descriptions-item label=\"总价格\">{{\r\n                order.totalPrice\r\n              }}</el-descriptions-item>\r\n              <el-descriptions-item label=\"订单状态\">{{\r\n                getStatusLabel(order.status)\r\n              }}</el-descriptions-item>\r\n              <el-descriptions-item label=\"订单地址\">{{\r\n                order.address\r\n              }}</el-descriptions-item>\r\n              <!-- <el-descriptions-item label=\"订单创建时间\">{{\r\n                order.orderDate\r\n              }}</el-descriptions-item> -->\r\n            </el-descriptions>\r\n          </div>\r\n          <div v-else>\r\n            <el-skeleton :loading=\"true\" rows=\"4\"></el-skeleton>\r\n          </div>\r\n        </el-card>\r\n      </el-aside>\r\n      <el-main style=\"padding: 20px\">\r\n        <el-card shadow=\"hover\">\r\n          <template #header>菜单详情</template>\r\n\r\n          <div class=\"block text-center\">\r\n            <el-carousel motion-blur>\r\n              <el-carousel-item v-for=\"dish in dishes\" :key=\"dish.id\">\r\n                <img src=\"https://disher-img.obs.cn-east-3.myhuaweicloud.com/febfd4dd-e090-4b1e-a5ae-01ca6813d31e.jpg\" style=\"width: 100%; margin-bottom: 20px\" />\r\n              </el-carousel-item>\r\n            </el-carousel>\r\n          </div>\r\n\r\n          <el-divider>菜品详细</el-divider>\r\n          <div v-if=\"dishes.length > 0\">\r\n            <p v-for=\"dish in dishes\" :key=\"dish.id\">\r\n              {{ dish.id }} . {{ dish.name }}:{{ dish.description }}\r\n            </p>\r\n          </div>\r\n          <div v-else>\r\n            <el-skeleton :loading=\"true\" rows=\"4\"></el-skeleton>\r\n          </div>\r\n        </el-card>\r\n      </el-main>\r\n    </el-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\n\r\nexport default {\r\n  name: \"BusinessOrderDetail\",\r\n  data() {\r\n    return {\r\n      order: null,\r\n      dishes: [],\r\n      orderId: null, // Initialize as null\r\n      statusList: [\r\n        { value: \"0\", label: \"未接单\" },\r\n        { value: \"1\", label: \"已结单\" },\r\n        { value: \"2\", label: \"派送中\" },\r\n        { value: \"3\", label: \"已完成\" },\r\n      ],\r\n    };\r\n  },\r\n  mounted() {\r\n    this.orderId = this.$route.query.id; // Get the ID from the URL\r\n    this.fetchOrderDetails();\r\n  },\r\n  watch: {\r\n    \"$route.query.id\": function (newId) {\r\n      this.orderId = newId;\r\n      this.fetchOrderDetails(); // Fetch new order details when ID changes\r\n    },\r\n  },\r\n  methods: {\r\n    fetchOrderDetails() {\r\n      if (this.orderId) {\r\n        axios\r\n          .get(\"/api/business/order/page/detail\", {\r\n            headers: {\r\n              token: localStorage.getItem(\"token\"),\r\n            },\r\n            params: {\r\n              orderId: this.orderId,\r\n            },\r\n          })\r\n          .then((response) => {\r\n            this.order = response.data.data;\r\n            console.log(\"Order details:\", this.order);\r\n            if (this.order && this.order.orderedDishes) {\r\n              this.fetchDishes(this.order.orderedDishes);\r\n            }\r\n          })\r\n          .catch((error) => {\r\n            console.error(\"Error fetching order details:\", error);\r\n          });\r\n      }\r\n    },\r\n    fetchDishes(orderedDishes) {\r\n      const dishIds = JSON.parse(orderedDishes);\r\n      const token = localStorage.getItem(\"token\");\r\n      const dishRequests = dishIds.map((id) =>\r\n        axios.get(`/api/business/dish/order/dish`, {\r\n          headers: {\r\n            token: token,\r\n          },\r\n          params: {\r\n            id: id,\r\n          },\r\n        })\r\n      );\r\n      Promise.all(dishRequests)\r\n        .then((responses) => {\r\n          this.dishes = responses.map((response) => response.data.data);\r\n          console.log(\"Dishes:\", this.dishes);\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error fetching dishes:\", error);\r\n        });\r\n    },\r\n    getStatusLabel(status) {\r\n      const statusObj = this.statusList.find((item) => item.value === status.toString());\r\n      return statusObj ? statusObj.label : \"未知状态\";\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.common-layout {\r\n  font-family: \"Arial\", sans-serif;\r\n}\r\n\r\n.demonstration {\r\n  color: var(--el-text-color-secondary);\r\n}\r\n\r\n\r\n.el-carousel__item:nth-child(2n) {\r\n  background-color: #99a9bf;\r\n  height: auto;\r\n}\r\n\r\n.el-carousel__item:nth-child(2n + 1) {\r\n  background-color: #d3dce6;\r\n}\r\n</style>\r\n"],"mappings":"AA4DA,OAAAA,KAAA;AAEA;EACAC,IAAA;EACAC,KAAA;IACA;MACAC,KAAA;MACAC,MAAA;MACAC,OAAA;MAAA;MACAC,UAAA,GACA;QAAAC,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA,GACA;QAAAD,KAAA;QAAAC,KAAA;MAAA;IAEA;EACA;EACAC,QAAA;IACA,KAAAJ,OAAA,QAAAK,MAAA,CAAAC,KAAA,CAAAC,EAAA;IACA,KAAAC,iBAAA;EACA;EACAC,KAAA;IACA,4BAAAC,CAAAC,KAAA;MACA,KAAAX,OAAA,GAAAW,KAAA;MACA,KAAAH,iBAAA;IACA;EACA;EACAI,OAAA;IACAJ,kBAAA;MACA,SAAAR,OAAA;QACAL,KAAA,CACAkB,GAAA;UACAC,OAAA;YACAC,KAAA,EAAAC,YAAA,CAAAC,OAAA;UACA;UACAC,MAAA;YACAlB,OAAA,OAAAA;UACA;QACA,GACAmB,IAAA,CAAAC,QAAA;UACA,KAAAtB,KAAA,GAAAsB,QAAA,CAAAvB,IAAA,CAAAA,IAAA;UACAwB,OAAA,CAAAC,GAAA,wBAAAxB,KAAA;UACA,SAAAA,KAAA,SAAAA,KAAA,CAAAyB,aAAA;YACA,KAAAC,WAAA,MAAA1B,KAAA,CAAAyB,aAAA;UACA;QACA,GACAE,KAAA,CAAAC,KAAA;UACAL,OAAA,CAAAK,KAAA,kCAAAA,KAAA;QACA;MACA;IACA;IACAF,YAAAD,aAAA;MACA,MAAAI,OAAA,GAAAC,IAAA,CAAAC,KAAA,CAAAN,aAAA;MACA,MAAAR,KAAA,GAAAC,YAAA,CAAAC,OAAA;MACA,MAAAa,YAAA,GAAAH,OAAA,CAAAI,GAAA,CAAAxB,EAAA,IACAZ,KAAA,CAAAkB,GAAA;QACAC,OAAA;UACAC,KAAA,EAAAA;QACA;QACAG,MAAA;UACAX,EAAA,EAAAA;QACA;MACA,EACA;MACAyB,OAAA,CAAAC,GAAA,CAAAH,YAAA,EACAX,IAAA,CAAAe,SAAA;QACA,KAAAnC,MAAA,GAAAmC,SAAA,CAAAH,GAAA,CAAAX,QAAA,IAAAA,QAAA,CAAAvB,IAAA,CAAAA,IAAA;QACAwB,OAAA,CAAAC,GAAA,iBAAAvB,MAAA;MACA,GACA0B,KAAA,CAAAC,KAAA;QACAL,OAAA,CAAAK,KAAA,2BAAAA,KAAA;MACA;IACA;IACAS,eAAAC,MAAA;MACA,MAAAC,SAAA,QAAApC,UAAA,CAAAqC,IAAA,CAAAC,IAAA,IAAAA,IAAA,CAAArC,KAAA,KAAAkC,MAAA,CAAAI,QAAA;MACA,OAAAH,SAAA,GAAAA,SAAA,CAAAlC,KAAA;IACA;EACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}